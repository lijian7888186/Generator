package ${entityMeta.packageName}.service.impl;

import javax.annotation.Resource;
import org.springframework.stereotype.Component;

import ${entityMeta.packageName}.domain.entity.${entityMeta.className};
import ${entityMeta.packageName}.manager.${entityMeta.className}Mapper;
import ${entityMeta.packageName}.service.${entityMeta.className}Service;
import ${entityMeta.packageName}.common.Page;
import ${entityMeta.packageName}.condition.${entityMeta.className}Condition;

/**
* ${entityMeta.comment}服务实现
* @author $entityMeta.author
*/
@Component("${entityMeta.lowerClassName}Service")
public class ${entityMeta.className}ServiceImpl implements ${entityMeta.className}Service {
    /**
    * the ${entityMeta.className}Mapper
    */
    @Resource
    private ${entityMeta.className}Mapper ${entityMeta.lowerClassName}Mapper;
    /*
    * (non-Javadoc)
    * @see ${entityMeta.packageName}.service.${entityMeta.className}Service\#add(${entityMeta.packageName}.domain.${entityMeta.className})
    */
    @Override
    public Long insert${entityMeta.className}(${entityMeta.className} ${entityMeta.lowerClassName}) {
        return ${entityMeta.lowerClassName}Mapper.insert${entityMeta.className}(${entityMeta.lowerClassName});
    }
    /*
    * (non-Javadoc)
    * @see ${entityMeta.packageName}.service.${entityMeta.className}Service\#update(${entityMeta.packageName}.domain.${entityMeta.className})
    */
    @Override
    public Long update${entityMeta.className}(${entityMeta.className} ${entityMeta.lowerClassName}) {
        return ${entityMeta.lowerClassName}Mapper.update${entityMeta.className}(${entityMeta.lowerClassName});
    }
    /*
    * (non-Javadoc)
    * @see${entityMeta.packageName}.service.${entityMeta.className}Service\#delete(java.lang.Long)
    */
    @Override
    public Long delete${entityMeta.className}(${entityMeta.pkFieldMeta.javaType} ${entityMeta.pkFieldMeta.javaName}) {
        return ${entityMeta.lowerClassName}Mapper.delete${entityMeta.className}(id);
    }
    /*
    * (non-Javadoc)
    * @see ${entityMeta.packageName}.service.${entityMeta.className}Service\#get${entityMeta.className}(Long id)
    */
    @Override
    public ${entityMeta.className} get${entityMeta.className}(Long id) {
        return ${entityMeta.lowerClassName}Mapper.get${entityMeta.className}(id);
    }
    /*
    * (non-Javadoc)
    * @see ${entityMeta.packageName}.service.${entityMeta.className}Service\#get${entityMeta.className}ListPage(${entityMeta.projectMeta.groupId}.domain.${entityMeta.className}, ${entityMeta.projectMeta.groupId}.common.Page)
    */
    @Override
    public Page find${entityMeta.className}List(Page page,${entityMeta.className}Condition ${entityMeta.lowerClassName}Condition) {
        return ${entityMeta.lowerClassName}Mapper.find${entityMeta.className}List(page, ${entityMeta.lowerClassName}Condition);
    }
}
